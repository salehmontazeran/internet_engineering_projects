# Generated by Django 3.0.2 on 2020-01-14 16:44

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]7$', 'Only alphabetical characters are allowed.'), django.core.validators.MinLengthValidator(1)])),
                ('last_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z]7$', 'Only alphabetical characters are allowed.'), django.core.validators.MinLengthValidator(1)])),
                ('ssn', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]10$', 'Only numerical characters are allowed.'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('personal_number', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator('^[0-9]10$', 'Only numerical characters are allowed.'), django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(7)])),
                ('mobile', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^(\\+\\d{1,3}[- ]?)?\\d{10}$', 'Only valid mobile number is allowed.')])),
                ('address', models.TextField()),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=10)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(70)])),
                ('salary', models.PositiveIntegerField()),
            ],
        ),
    ]
